@using PagedList.Mvc;
@model PagedList.IPagedList<BoardGameLibrary.Data.Models.Checkout>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Checkout History</h2>

@using (Html.BeginForm("Index", "Checkouts", FormMethod.Get, new { @class = "form-inline" }))
{
    <p>
        @Html.TextBox("SearchString", null, new { @class = "form-control text-box", placeholder = "Title, library ID, or attendee name/ID" })
        <input type="submit" value="Search" class="btn btn-primary" />
        
    </p>
}

<table class="checkout-history-table table">
    <tr>
        <th>
            @Html.DisplayNameFor(m => m.First().Copy)
        </th>
        <th>
            @Html.DisplayNameFor(m => m.First().Attendee)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Length)
        </th>
        <th>
            <span class="glyphicon glyphicon-sort"></span>
            @{
                object timeOutLinkOptions = null;
                if (((string)ViewBag.SortOrder).Contains("time_out"))
                {
                    timeOutLinkOptions = new { @class = "current-sort" };
                }
            }
            @Html.ActionLink("Time Out", "Index", new { sortOrder = ViewBag.TimeOutSort }, timeOutLinkOptions)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().TimeIn)
        </th>
        <th>
            <span class="glyphicon glyphicon-sort"></span>
            @{
                object playLinkOptions = null;
                if (((string)ViewBag.SortOrder).Contains("play"))
                {
                    playLinkOptions = new { @class = "current-sort" };
                }
            }
            @Html.ActionLink("Play Entered", "Index", new { sortOrder = ViewBag.PlaySort }, playLinkOptions)
        </th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @string.Format("{0} ({1})", item.Copy.Game.Title, item.Copy.LibraryID)
        </td>
        <td>
            @string.Format("{0} ({1})", item.Attendee.Name, item.Attendee.BadgeID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Length)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TimeOut)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TimeIn)
        </td>
        <td>
            @{
                var playEntered = item.Play != null;
            }
            @playEntered
        </td>
    </tr>
}

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index", new { page, currentFilter = ViewBag.CurrentFilter, sortOrder = ViewBag.SortOrder }))