@model BoardGameLibrary.Models.CopyCheckOutViewModel

<div id="check-out-form-wrapper">
    @using (Ajax.BeginForm("CheckOutCopy", "Copies", 
        new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "check-out-form-wrapper", OnSuccess = "clearCheckOutForm", OnFailure = "updateCheckOutForm"
    }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Check Out</h4>
            <div class="col-md-12 notification-wrapper">
                @if (Model.Messages.Any())
                {
                    <div class="notification-panel fade-in fade-out-delayed">
                        @foreach (var msg in Model.Messages)
                        {
                            <span class="notification fade-in fade-out-delayed">@msg</span>
                        }
                    </div>
                }
            </div>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.CopyLibraryID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CopyLibraryID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CopyLibraryID, "", new { @class = "text-danger" })
                    <strong id="locatedGameTitle" class="floatleft green-text"></strong>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AttendeeBadgeID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AttendeeBadgeID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AttendeeBadgeID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OverrideLimit, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.CheckBoxFor(model => model.OverrideLimit, new { @class = "form-control bigcheckbox" } )
                    @Html.ValidationMessageFor(model => model.OverrideLimit, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-12">
                    <input type="submit" value="Check Out" class="btn btn-lg btn-primary" />
                </div>
            </div>
        </div>
    }
</div>

<script type="text/javascript">
    $("#CopyLibraryID").blur(function () {
        var id = $("#CopyLibraryID").val();
        if (id) {
            $.get('@Url.Action("GetCopyGameTitle", "Copies")', { copyId: id }, function (response) {
                $("#locatedGameTitle").text(response.title);
            });
        }
    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
